{
  "openapi": "3.0.0",
  "info": {
    "title": "Car Catalog API",
    "description": "A RESTful API for managing car brands and models with price tracking",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "API base path"
    }
  ],
  "paths": {
    "/brands": {
      "get": {
        "summary": "Get all car brands",
        "description": "Returns a list of all car brands with their average prices",
        "operationId": "getBrands",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new brand",
        "description": "Adds a new car brand to the database",
        "operationId": "createBrand",
        "requestBody": {
          "description": "Brand object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Brand created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brandId}/models": {
      "get": {
        "summary": "Get all models for a specific brand",
        "description": "Returns a list of car models for the specified brand ID",
        "operationId": "getCarsByBrand",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of the brand to get models for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid brand ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new model for a specific brand",
        "description": "Adds a new car model to the specified brand",
        "operationId": "createModel",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of the brand to add the model to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Model object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Model created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "summary": "Get all car models with optional price filtering",
        "description": "Returns a list of all car models, optionally filtered by price range",
        "operationId": "getAllModels",
        "parameters": [
          {
            "name": "greater",
            "in": "query",
            "description": "Filter for models with a price greater than or equal to this value",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "lower",
            "in": "query",
            "description": "Filter for models with a price less than or equal to this value",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid price filter parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models/{id}": {
      "put": {
        "summary": "Update a model's price",
        "description": "Updates the average price of a specific car model",
        "operationId": "editModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the model to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New price information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelPriceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Model price updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Model not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Toyota"
          },
          "averagePrice": {
            "type": "number",
            "format": "float",
            "example": 25000
          }
        }
      },
      "BrandInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Toyota"
          }
        }
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Corolla"
          },
          "averagePrice": {
            "type": "number",
            "format": "float",
            "example": 25000
          },
          "brandName": {
            "type": "string",
            "example": "Toyota"
          }
        }
      },
      "ModelInput": {
        "type": "object",
        "required": ["name", "averagePrice"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Corolla"
          },
          "averagePrice": {
            "type": "number",
            "format": "float",
            "example": 25000
          }
        }
      },
      "ModelPriceUpdate": {
        "type": "object",
        "required": ["averagePrice"],
        "properties": {
          "averagePrice": {
            "type": "number",
            "format": "float",
            "example": 26000
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Error message details"
          }
        }
      }
    }
  }
}
